#!/usr/bin/env ruby
require 'fileutils'

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

def system!(*args)
  puts "Running: #{args}"
  system(*args) || abort("\n== Command #{args} failed ==")
end

def docker_rails_setup
  tag_name = 'chatter'
  host_app_dir = File.expand_path('.')
  container_app_dir = '/app'

  # build the image
  system!('docker', 'build', '.', '--tag', tag_name) unless ENV['SKIP_BUILD']

  # run it interactively, with shared volume for app
  docker_cmds = ['docker']
  docker_cmds << 'run'
  # Allow developer to interact with running conmtainer (Keep STDIN open even if not attached)
  docker_cmds << '--interactive'
  # port 3000 in container is available as port 3000 in host
  docker_cmds << '--publish'
  docker_cmds << '3000:3000'
   # Allocate a pseudo-TTY (enable typing in terminal)
  docker_cmds << '--tty'
  # share host working dir in container
  docker_cmds << '--volume'
  docker_cmds << "#{host_app_dir}:#{container_app_dir}"
  # Use "latest" of the image built in above 'docker build' command
  docker_cmds << "#{tag_name}:latest"

  system!(*docker_cmds)
end

def standard_rails_setup
    # This script is a way to setup or update your development environment automatically.
  # This script is idempotent, so that you can run it at anytime and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts '== Installing dependencies =='
  system! 'gem install bundler --conservative'
  system('bundle check') || system!('bundle install')

  # Install JavaScript dependencies
  # system('bin/yarn')

  # puts "\n== Copying sample files =="
  # unless File.exist?('config/database.yml')
  #   FileUtils.cp 'config/database.yml.sample', 'config/database.yml'
  # end

  puts "\n== Preparing database =="
  system! 'bin/rails db:prepare'

  puts "\n== Removing old logs and tempfiles =="
  system! 'bin/rails log:clear tmp:clear'

  puts "\n== Restarting application server =="
  system! 'bin/rails restart'
end

FileUtils.chdir APP_ROOT do
  docker_rails_setup
end
